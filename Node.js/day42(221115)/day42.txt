프론트엔드 42일차 목차입니다. 

1. 프론트엔드 및 백엔드 연동
2. RestAPI 통신
3. Server Routing 처리

자신의 꿈을 만들어가지 못하면 언젠가 남의 꿈을 이루는데 이용될 것이다.
----------------------------------------------------------------

프론트 : React
백엔드 : Node

둘을 연동하기 위해 React의 package.json에 마지막에 "proxy" : "http://localhost:8080"를 추가 해줘야 함
그리고 프론트와 백 쪽과의 데이터를 주고 받기 위한 통신 라이브러리인 axios를 설치
npm install axios

Request에서 axios.get을 이용해 porxy적어 놓은 8080 포트로 연결하여 값을 가져온다.

proxy는 axios로 요청하는 모든 것은 proxy에 적혀있는 포트로 접속해서 갈거야라고 설정하는 것
그래서 프론트엔드에서 3000포트로 해도 백엔드의 8080에 접속하는 것이다.

2번째 줄 axios get()에는 메소드명(get, post 등)을 넣는다.
.then은 응답 성공 시(200대 status code) response를 받는 부분이다.
.catch는 에러를 받는다.

function getPost() {
  axios get("http://example.com/posts/12345/")
    .then(reponse => {
      console.log(response);
    })
    .catch(error => {
      console.error(error);
    })
}

res.data는 응답으로부터 받은 데이터가 들어감


RestAPI
	REST는 Represetational State Transfer라는 용어의 약자로
	2000년도에 로이 필딩(Roy Filding)의 박사학위 논문에서 최초로 소개
	웹의 장점을 최대한 활용할 수 있는 아키텍처로써 REST를 발표

	GET		해당 리소스를 조회(데이터를 가져오는 요청)
	POST		리소스를 조회하고 자세한 정보를 가져온다.(데이터 전달)
	PUT		해당 리소스를 수정(데이터를 수정할 경우 요청)
	DELETE	해당 리소스를 삭제(데이터를 삭제할 경우 요청)

URI 설계시 고려사항
	슬래스 구분자(/)는 계층 관계를 나타내는 데 사용
	가독성을 위해 밑줄(_)은 URI에 사용하지 않고 하이픈(-)을 사용한다.
	URI 경로에는 소문자를 이요한다.
	파일 확장자는 URI에 포함시키지 않는다.
	GET 		http:/daum.net/member/345/	사용자 조회
	PUT		http:/daum.net/member/345/	사용자 정보 수정
	DELETE	http:/daum.net/member/345/	사용자 정보 삭제

대표적인 응답 상태 코드
	200	클라이언트의 요청을 정상적으로 수행함.
	201	클라이언트가 어떠한 리소스 생성을 요청, 해당 리소스가 성공적으로 전달됨
	400	클라리언트의 요청이 부적절 할 경우 사용하는 응답코드	
	301	클라이언트가 요청한 리소스에 대한 URI가 변경되었을 때 사용하는 응답 코드
	500	서버에 문제가 있을 경우 사용하는 응답코드












